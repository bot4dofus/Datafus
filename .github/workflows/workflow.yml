name: Workflow

on:
  workflow_dispatch:
  repository_dispatch:

jobs:
  Job_U:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: U1 - Update Dofus Client
        run: |
          .\src\U1\U1.ps1 src\U1\project.json data\U\swf\ data\U\d2o\ data\U\d2i\

      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: Job_U
          path: |
            data/U/

  Job_A:
    runs-on: ubuntu-latest
    needs: [Job_U]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: Job_U
          path: data/U/

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: A1 - Extract DofusInvoker.swf
        run: |
          chmod +x src/A1.sh
          src/A1.sh data/U/swf/DofusInvoker.swf data/A/DofusInvoker/

      - name: A2 - Build .json
        run: |
            python src/A2.py data/A/DofusInvoker/scripts/com/ data/A/events.json

      - name: A3 - Build .properties
        run: |
            python src/A3.py data/A/events.json data/A/events.properties

      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: Job_A
          path: |
            data/A/

  Job_B:
    runs-on: ubuntu-latest
    needs: [Job_U]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: Job_U
          path: data/U/

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: B1 - Build .json
        run: |
            python src/B1.py data/U/d2o/ data/B/entities_json/

      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: Job_B
          path: |
            data/B/

  Job_C:
    runs-on: ubuntu-latest
    needs: [Job_U]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: Job_U
          path: data/U/

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: C1 - Build .json
        run: |
            python src/C1.py data/U/d2i/ data/C/translations_json/

      - name: Upload files
        uses: actions/upload-artifact@v3
        with:
          name: Job_C
          path: |
            data/C/

  Job_P:
    runs-on: ubuntu-latest
    needs: [Job_A, Job_B, Job_C]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Download files Job A
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: Job_A
          path: data/A/

      - name: Download files Job B
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: Job_B
          path: data/B/

      - name: Download files Job C
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: Job_C
          path: data/C/

      - name: Get latest Dofus version
        run: |
          export DOFUS_VERSION=$(bash devscript/latest-dofus-version.sh)
          echo The current Dofus version is $DOFUS_VERSION
          echo "::set-env name=VERSION::$DOFUS_VERSION"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Commit and push
        uses: EndBug/add-and-commit@v9
        with:
          add: '["data/A/", "data/B/", "data/C/"]'
          message: 'Update ${{ env.VERSION }}'
          push: true

      - name: Create zip file
        run: |
            zip -r data.zip data/A/ data/B/ data/C/

      - name: Publish release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.VERSION }}
          prerelease: false
          title: ${{ env.VERSION }}
          files: |
            ./data.zip
